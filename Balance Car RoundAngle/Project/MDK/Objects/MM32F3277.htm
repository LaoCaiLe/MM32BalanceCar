<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\MM32F3277.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\MM32F3277.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Wed Jul 21 10:06:22 2021
<BR><P>
<H3>Maximum Stack Usage =        352 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TIM1_UP_IRQHandler &rArr; task_2ms &rArr; Q_IMUupdata &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[63]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[63]">SysTick_Handler</a><BR>
 <LI><a href="#[76]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[76]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[76]">ADC1_2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[8f]">ADC3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[31]">AnglePid_OutMax_Add</a> from menu_core.o(i.AnglePid_OutMax_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[32]">AnglePid_OutMax_Sub</a> from menu_core.o(i.AnglePid_OutMax_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[33]">AnglePid_OutMin_Add</a> from menu_core.o(i.AnglePid_OutMin_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[34]">AnglePid_OutMin_Sub</a> from menu_core.o(i.AnglePid_OutMin_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[13]">AngleSpeedPid_OutMax_Add</a> from menu_core.o(i.AngleSpeedPid_OutMax_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[14]">AngleSpeedPid_OutMax_Sub</a> from menu_core.o(i.AngleSpeedPid_OutMax_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[15]">AngleSpeedPid_OutMin_Add</a> from menu_core.o(i.AngleSpeedPid_OutMin_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[16]">AngleSpeedPid_OutMin_Sub</a> from menu_core.o(i.AngleSpeedPid_OutMin_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[11]">AngleSpeed_kd_Add</a> from menu_core.o(i.AngleSpeed_kd_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[12]">AngleSpeed_kd_Sub</a> from menu_core.o(i.AngleSpeed_kd_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[f]">AngleSpeed_ki_Add</a> from menu_core.o(i.AngleSpeed_ki_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[10]">AngleSpeed_ki_Sub</a> from menu_core.o(i.AngleSpeed_ki_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[d]">AngleSpeed_kp_Add</a> from menu_core.o(i.AngleSpeed_kp_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[e]">AngleSpeed_kp_Sub</a> from menu_core.o(i.AngleSpeed_kp_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[2f]">Angle_kd_Add</a> from menu_core.o(i.Angle_kd_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[30]">Angle_kd_Sub</a> from menu_core.o(i.Angle_kd_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[2d]">Angle_ki_Add</a> from menu_core.o(i.Angle_ki_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[2e]">Angle_ki_Sub</a> from menu_core.o(i.Angle_ki_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[2b]">Angle_kp_Add</a> from menu_core.o(i.Angle_kp_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[2c]">Angle_kp_Sub</a> from menu_core.o(i.Angle_kp_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[5e]">BusFault_Handler</a> from common.o(i.BusFault_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[78]">CAN1_RX_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[9d]">COMP1_2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[0]">CarSpeed_Add</a> from menu_core.o(i.CarSpeed_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[2]">CarSpeed_Sub</a> from menu_core.o(i.CarSpeed_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[c]">Car_Data_Read</a> from car_data.o(i.Car_Data_Read) referenced 14 times from menu_core.o(.data)
 <LI><a href="#[b]">Car_Data_Write</a> from car_data.o(i.Car_Data_Write) referenced 18 times from menu_core.o(.data)
 <LI><a href="#[6f]">DMA1_Channel1_IRQHandler</a> from isr.o(i.DMA1_Channel1_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[70]">DMA1_Channel2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[71]">DMA1_Channel3_IRQHandler</a> from isr.o(i.DMA1_Channel3_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[72]">DMA1_Channel4_IRQHandler</a> from isr.o(i.DMA1_Channel4_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[73]">DMA1_Channel5_IRQHandler</a> from isr.o(i.DMA1_Channel5_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[74]">DMA1_Channel6_IRQHandler</a> from isr.o(i.DMA1_Channel6_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[75]">DMA1_Channel7_IRQHandler</a> from isr.o(i.DMA1_Channel7_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[97]">DMA2_Channel1_IRQHandler</a> from isr.o(i.DMA2_Channel1_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[98]">DMA2_Channel2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[99]">DMA2_Channel3_IRQHandler</a> from isr.o(i.DMA2_Channel3_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[9a]">DMA2_Channel4_IRQHandler</a> from isr.o(i.DMA2_Channel4_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[9b]">DMA2_Channel5_IRQHandler</a> from isr.o(i.DMA2_Channel5_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[61]">DebugMon_Handler</a> from common.o(i.DebugMon_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[9c]">ETH_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[6a]">EXTI0_IRQHandler</a> from isr.o(i.EXTI0_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[88]">EXTI15_10_IRQHandler</a> from isr.o(i.EXTI15_10_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[6b]">EXTI1_IRQHandler</a> from isr.o(i.EXTI1_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[6c]">EXTI2_IRQHandler</a> from isr.o(i.EXTI2_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[6d]">EXTI3_IRQHandler</a> from isr.o(i.EXTI3_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[6e]">EXTI4_IRQHandler</a> from isr.o(i.EXTI4_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[79]">EXTI9_5_IRQHandler</a> from isr.o(i.EXTI9_5_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[68]">FLASH_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[54]">Fall_time_Add</a> from menu_core.o(i.Fall_time_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[55]">Fall_time_Sub</a> from menu_core.o(i.Fall_time_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[77]">FlashCache_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[8]">Follow_Mode</a> from menu_core.o(i.Follow_Mode) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[3f]">ForkRoad_Enable_Set</a> from menu_core.o(i.ForkRoad_Enable_Set) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[40]">ForkRoad_L</a> from menu_core.o(i.ForkRoad_L) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[41]">ForkRoad_R</a> from menu_core.o(i.ForkRoad_R) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[3e]">ForkRoad_Reset</a> from menu_core.o(i.ForkRoad_Reset) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[5c]">HardFault_Handler</a> from common.o(i.HardFault_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[81]">I2C1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[82]">I2C2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[46]">InFork_Angle_Add</a> from menu_core.o(i.InFork_Angle_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[47]">InFork_Angle_Sub</a> from menu_core.o(i.InFork_Angle_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[50]">InFork_Inductance_L_Add</a> from menu_core.o(i.InFork_Inductance_L_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[51]">InFork_Inductance_L_Sub</a> from menu_core.o(i.InFork_Inductance_L_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[4e]">InFork_Inductance_M_Add</a> from menu_core.o(i.InFork_Inductance_M_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[4f]">InFork_Inductance_M_Sub</a> from menu_core.o(i.InFork_Inductance_M_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[52]">InFork_Inductance_R_Add</a> from menu_core.o(i.InFork_Inductance_R_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[53]">InFork_Inductance_R_Sub</a> from menu_core.o(i.InFork_Inductance_R_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[19]">InFork_TurnKd_Add</a> from menu_core.o(i.InFork_TurnKd_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[1a]">InFork_TurnKd_Sub</a> from menu_core.o(i.InFork_TurnKd_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[42]">InFork_factor_Add</a> from menu_core.o(i.InFork_factor_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[43]">InFork_factor_Sub</a> from menu_core.o(i.InFork_factor_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[44]">InFork_speed_Add</a> from menu_core.o(i.InFork_speed_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[45]">InFork_speed_Sub</a> from menu_core.o(i.InFork_speed_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[56]">InFork_time_Add</a> from menu_core.o(i.InFork_time_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[57]">InFork_time_Sub</a> from menu_core.o(i.InFork_time_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[3b]">InRound_Angle_Add</a> from menu_core.o(i.InRound_Angle_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[3c]">InRound_Angle_Sub</a> from menu_core.o(i.InRound_Angle_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[36]">InRound_Enable_Set</a> from menu_core.o(i.InRound_Enable_Set) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[4a]">InRound_Inductance_L_Add</a> from menu_core.o(i.InRound_Inductance_L_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[4b]">InRound_Inductance_L_Sub</a> from menu_core.o(i.InRound_Inductance_L_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[48]">InRound_Inductance_M_Add</a> from menu_core.o(i.InRound_Inductance_M_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[49]">InRound_Inductance_M_Sub</a> from menu_core.o(i.InRound_Inductance_M_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[4c]">InRound_Inductance_R_Add</a> from menu_core.o(i.InRound_Inductance_R_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[4d]">InRound_Inductance_R_Sub</a> from menu_core.o(i.InRound_Inductance_R_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[39]">InRound_factor_Add</a> from menu_core.o(i.InRound_factor_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[3a]">InRound_factor_Sub</a> from menu_core.o(i.InRound_factor_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[3d]">Is_abandon_Round</a> from menu_core.o(i.Is_abandon_Round) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[5d]">MemManage_Handler</a> from common.o(i.MemManage_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3]">Mid_Angle_Add</a> from menu_core.o(i.Mid_Angle_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[4]">Mid_Angle_Sub</a> from menu_core.o(i.Mid_Angle_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[5b]">NMI_Handler</a> from common.o(i.NMI_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1]">Nop_Func</a> from menu_core.o(i.Nop_Func) referenced 238 times from menu_core.o(.data)
 <LI><a href="#[9e]">OTG_FS_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[8a]">OTG_FS_WKUP_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[65]">PVD_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[62]">PendSV_Handler</a> from common.o(i.PendSV_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[69]">RCC_CRS_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[89]">RTCAlarm_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[67]">RTC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[5a]">Reset_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[37]">Round_L</a> from menu_core.o(i.Round_L) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[38]">Round_R</a> from menu_core.o(i.Round_R) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[35]">Round_Reset</a> from menu_core.o(i.Round_Reset) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[90]">SDIO_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[83]">SPI1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[84]">SPI2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[92]">SPI3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[60]">SVC_Handler</a> from common.o(i.SVC_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[27]">SpeedPid_OutMax_Add</a> from menu_core.o(i.SpeedPid_OutMax_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[28]">SpeedPid_OutMax_Sub</a> from menu_core.o(i.SpeedPid_OutMax_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[29]">SpeedPid_OutMin_Add</a> from menu_core.o(i.SpeedPid_OutMin_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[2a]">SpeedPid_OutMin_Sub</a> from menu_core.o(i.SpeedPid_OutMin_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[9]">Stand_Mode</a> from menu_core.o(i.Stand_Mode) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[5]">StartAngle_Add</a> from menu_core.o(i.StartAngle_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[6]">StartAngle_Sub</a> from menu_core.o(i.StartAngle_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[63]">SysTick_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[a3]">SystemInit</a> from system_mm32f327x.o(i.SystemInit) referenced from startup_mm32f327x_keil.o(.text)
 <LI><a href="#[66]">TAMPER_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[7a]">TIM1_BRK_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[7d]">TIM1_CC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[7c]">TIM1_TRG_COM_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[7b]">TIM1_UP_IRQHandler</a> from isr.o(i.TIM1_UP_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[7e]">TIM2_IRQHandler</a> from isr.o(i.TIM2_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[7f]">TIM3_IRQHandler</a> from isr.o(i.TIM3_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[80]">TIM4_IRQHandler</a> from isr.o(i.TIM4_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[91]">TIM5_IRQHandler</a> from isr.o(i.TIM5_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[95]">TIM6_IRQHandler</a> from isr.o(i.TIM6_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[96]">TIM7_IRQHandler</a> from isr.o(i.TIM7_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[8b]">TIM8_BRK_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[8e]">TIM8_CC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[8d]">TIM8_TRG_COM_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[8c]">TIM8_UP_IRQHandler</a> from isr.o(i.TIM8_UP_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[a]">Transmit_buff</a> from menu_core.o(i.Transmit_buff) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[1d]">Turn_OutMax_Add</a> from menu_core.o(i.Turn_OutMax_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[1e]">Turn_OutMax_Sub</a> from menu_core.o(i.Turn_OutMax_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[1f]">Turn_OutMin_Add</a> from menu_core.o(i.Turn_OutMin_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[20]">Turn_OutMin_Sub</a> from menu_core.o(i.Turn_OutMin_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[1b]">Turn_kd_Add</a> from menu_core.o(i.Turn_kd_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[1c]">Turn_kd_Sub</a> from menu_core.o(i.Turn_kd_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[17]">Turn_kp_Add</a> from menu_core.o(i.Turn_kp_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[18]">Turn_kp_Sub</a> from menu_core.o(i.Turn_kp_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[85]">UART1_IRQHandler</a> from isr.o(i.UART1_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[86]">UART2_IRQHandler</a> from isr.o(i.UART2_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[87]">UART3_IRQHandler</a> from isr.o(i.UART3_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[93]">UART4_IRQHandler</a> from isr.o(i.UART4_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[94]">UART5_IRQHandler</a> from isr.o(i.UART5_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[9f]">UART6_IRQHandler</a> from isr.o(i.UART6_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[a0]">UART7_IRQHandler</a> from isr.o(i.UART7_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[a1]">UART8_IRQHandler</a> from isr.o(i.UART8_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[5f]">UsageFault_Handler</a> from common.o(i.UsageFault_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[64]">WWDG_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[a4]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32f327x_keil.o(.text)
 <LI><a href="#[a5]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[7]">getball_flag</a> from menu_core.o(i.getball_flag) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[a2]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[59]">show_Disable</a> from menu_core.o(i.show_Disable) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[58]">show_Enable</a> from menu_core.o(i.show_Enable) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[25]">speed_kd_Add</a> from menu_core.o(i.speed_kd_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[26]">speed_kd_Sub</a> from menu_core.o(i.speed_kd_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[23]">speed_ki_Add</a> from menu_core.o(i.speed_ki_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[24]">speed_ki_Sub</a> from menu_core.o(i.speed_ki_Sub) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[21]">speed_kp_Add</a> from menu_core.o(i.speed_kp_Add) referenced 2 times from menu_core.o(.data)
 <LI><a href="#[22]">speed_kp_Sub</a> from menu_core.o(i.speed_kp_Sub) referenced 2 times from menu_core.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[a4]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(.text)
</UL>
<P><STRONG><a name="[15c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[a6]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c1]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[15d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[15e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[15f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[160]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[161]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[5a]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>CAN1_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>COMP1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>FlashCache_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_ldivmod</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_offset
</UL>

<P><STRONG><a name="[ad]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[162]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[163]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[e9]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_offset
</UL>

<P><STRONG><a name="[164]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stand_Control
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Control
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_Control
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steepest_descend
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPF_1
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FuzzyPD
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kp_Add
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kd_Add
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kp_Add
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kp_Add
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stand_Control
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPF_1
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FuzzyPD
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_DMF
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kp_Sub
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kd_Sub
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kp_Sub
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kp_Sub
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_sqrt
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_DMF
</UL>

<P><STRONG><a name="[c7]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stand_Control
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Control
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_Control
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steepest_descend
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_sqrt
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPF_1
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_steepest
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FuzzyPD
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_DMF
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_init
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steepest_descend
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPF_1
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_DMF
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuzzy_Kp
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuzzy_Kd
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kp_Add
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_ki_Add
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kd_Add
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mid_Angle_Add
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_factor_Add
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_factor_Add
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_ki_Add
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kd_Add
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_ki_Add
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kd_Add
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kp_Sub
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_ki_Sub
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kd_Sub
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mid_Angle_Sub
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_factor_Sub
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_factor_Sub
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_ki_Sub
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kd_Sub
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_ki_Sub
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kd_Sub
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[ba]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[bc]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_100ms
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stand_Control
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Control
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_Control
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steepest_descend
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_steepest
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_DMF
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuzzy_Kp
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuzzy_Kd
</UL>

<P><STRONG><a name="[be]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steepest_descend
</UL>

<P><STRONG><a name="[c8]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stand_Control
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Control
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_Control
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steepest_descend
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_DMF
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuzzy_Kp
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuzzy_Kd
</UL>

<P><STRONG><a name="[153]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
</UL>

<P><STRONG><a name="[c9]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_show
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubMenu_Display
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kp_Sub
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kp_Add
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_ki_Sub
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_ki_Add
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kd_Sub
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kd_Add
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kp_Sub
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kp_Add
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kd_Sub
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kd_Add
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mid_Angle_Sub
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mid_Angle_Add
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_factor_Sub
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_factor_Add
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_factor_Sub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_factor_Add
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kp_Sub
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kp_Add
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_ki_Sub
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_ki_Add
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kd_Sub
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kd_Add
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kp_Sub
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kp_Add
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_ki_Sub
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_ki_Add
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kd_Sub
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kd_Add
</UL>

<P><STRONG><a name="[125]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[bf]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kp_Sub
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kp_Add
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_ki_Sub
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_ki_Add
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kd_Sub
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kd_Add
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mid_Angle_Sub
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mid_Angle_Add
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_factor_Sub
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_factor_Add
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_factor_Sub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_factor_Add
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_ki_Sub
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_ki_Add
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kd_Sub
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kd_Add
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_ki_Sub
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_ki_Add
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kd_Sub
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kd_Add
</UL>

<P><STRONG><a name="[165]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steepest_descend
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FuzzyPD
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_DMF
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuzzy_Kp
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuzzy_Kd
</UL>

<P><STRONG><a name="[102]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steepest_descend
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;limit_filter
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FuzzyPD
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_DMF
</UL>

<P><STRONG><a name="[166]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[128]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[167]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[168]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[169]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[16a]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[b0]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[b8]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[b7]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[120]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[16b]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a7]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[16c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[16d]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[16e]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>AnglePid_OutMax_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.AnglePid_OutMax_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = AnglePid_OutMax_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>AnglePid_OutMax_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.AnglePid_OutMax_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = AnglePid_OutMax_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>AnglePid_OutMin_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.AnglePid_OutMin_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = AnglePid_OutMin_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>AnglePid_OutMin_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.AnglePid_OutMin_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = AnglePid_OutMin_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>AngleSpeedPid_OutMax_Add</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.AngleSpeedPid_OutMax_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = AngleSpeedPid_OutMax_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>AngleSpeedPid_OutMax_Sub</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.AngleSpeedPid_OutMax_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = AngleSpeedPid_OutMax_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>AngleSpeedPid_OutMin_Add</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.AngleSpeedPid_OutMin_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = AngleSpeedPid_OutMin_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>AngleSpeedPid_OutMin_Sub</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.AngleSpeedPid_OutMin_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = AngleSpeedPid_OutMin_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[c5]"></a>AngleSpeed_Control</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, car_control.o(i.AngleSpeed_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AngleSpeed_Control &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;limit_ab
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
</UL>

<P><STRONG><a name="[11]"></a>AngleSpeed_kd_Add</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.AngleSpeed_kd_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = AngleSpeed_kd_Add &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>AngleSpeed_kd_Sub</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.AngleSpeed_kd_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = AngleSpeed_kd_Sub &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>AngleSpeed_ki_Add</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.AngleSpeed_ki_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = AngleSpeed_ki_Add &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>AngleSpeed_ki_Sub</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.AngleSpeed_ki_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = AngleSpeed_ki_Sub &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>AngleSpeed_kp_Add</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, menu_core.o(i.AngleSpeed_kp_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = AngleSpeed_kp_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>AngleSpeed_kp_Sub</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, menu_core.o(i.AngleSpeed_kp_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = AngleSpeed_kp_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>Angle_kd_Add</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.Angle_kd_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Angle_kd_Add &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>Angle_kd_Sub</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.Angle_kd_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Angle_kd_Sub &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>Angle_ki_Add</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.Angle_ki_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Angle_ki_Add &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>Angle_ki_Sub</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.Angle_ki_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Angle_ki_Sub &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>Angle_kp_Add</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, menu_core.o(i.Angle_kp_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Angle_kp_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>Angle_kp_Sub</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, menu_core.o(i.Angle_kp_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Angle_kp_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[10b]"></a>AutoCalPllFactor</STRONG> (Thumb, 102 bytes, Stack size 28 bytes, system_mm32f327x.o(i.AutoCalPllFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = AutoCalPllFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>

<P><STRONG><a name="[ca]"></a>Beep_Start</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, car_control.o(i.Beep_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Beep_Start &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_100ms
</UL>

<P><STRONG><a name="[cc]"></a>Beep_Stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, car_control.o(i.Beep_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Beep_Stop &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_100ms
</UL>

<P><STRONG><a name="[5e]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[0]"></a>CarSpeed_Add</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, menu_core.o(i.CarSpeed_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CarSpeed_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>CarSpeed_Sub</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, menu_core.o(i.CarSpeed_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CarSpeed_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>Car_Data_Read</STRONG> (Thumb, 410 bytes, Stack size 8 bytes, car_data.o(i.Car_Data_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Car_Data_Read &rArr; SubMenu_Display &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_read
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubMenu_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>Car_Data_Write</STRONG> (Thumb, 324 bytes, Stack size 8 bytes, car_data.o(i.Car_Data_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Car_Data_Write &rArr; flash_page_program &rArr; FLASH_ProgramWord &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_program
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[6f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_dma
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_dma
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_uart_dma
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel7_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA2_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_Channel1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.DMA2_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_Channel3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.DMA2_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_Channel4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, isr.o(i.DMA2_Channel5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_Channel5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[d3]"></a>DMA_ClearFlag</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel5_IRQHandler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel4_IRQHandler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel3_IRQHandler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel1_IRQHandler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel7_IRQHandler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel5_IRQHandler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel4_IRQHandler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel3_IRQHandler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel1_IRQHandler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel7_IRQHandler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[d7]"></a>Data_steepest</STRONG> (Thumb, 282 bytes, Stack size 16 bytes, car_filtercalculate.o(i.Data_steepest))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Data_steepest &rArr; steepest_descend &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steepest_descend
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_2ms
</UL>

<P><STRONG><a name="[61]"></a>DebugMon_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[d9]"></a>DownFunc</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, menu_core.o(i.DownFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DownFunc &rArr; MENU_drawRectagnleFill &rArr; MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_drawRectagnleFill
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_task
</UL>

<P><STRONG><a name="[6a]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, isr.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, isr.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI15_10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, isr.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, isr.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, isr.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, isr.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, isr.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_vsync
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_vsync
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_uart_vsync
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[db]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[dc]"></a>EXTI_GetITStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[133]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
</UL>

<P><STRONG><a name="[e0]"></a>FLASH_ErasePage</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hal_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
</UL>

<P><STRONG><a name="[e4]"></a>FLASH_GetStatus</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[134]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_program
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
</UL>

<P><STRONG><a name="[e2]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, hal_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
</UL>

<P><STRONG><a name="[e3]"></a>FLASH_ProgramWord</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, hal_flash.o(i.FLASH_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FLASH_ProgramWord &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_program
</UL>

<P><STRONG><a name="[132]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_program
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
</UL>

<P><STRONG><a name="[e1]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[136]"></a>FSMC_NORSRAMB_BankStructInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_fsmc.o(i.FSMC_NORSRAMB_BankStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsmc_init
</UL>

<P><STRONG><a name="[13a]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, hal_fsmc.o(i.FSMC_NORSRAMInit))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsmc_init
</UL>

<P><STRONG><a name="[137]"></a>FSMC_NORSRAMStructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_fsmc.o(i.FSMC_NORSRAMStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsmc_init
</UL>

<P><STRONG><a name="[139]"></a>FSMC_NORSRAM_Bank_Init</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, hal_fsmc.o(i.FSMC_NORSRAM_Bank_Init))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsmc_init
</UL>

<P><STRONG><a name="[54]"></a>Fall_time_Add</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, menu_core.o(i.Fall_time_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Fall_time_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>Fall_time_Sub</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, menu_core.o(i.Fall_time_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Fall_time_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>Follow_Mode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, menu_core.o(i.Follow_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Follow_Mode &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>ForkRoad_Enable_Set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.ForkRoad_Enable_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ForkRoad_Enable_Set &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>ForkRoad_L</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, menu_core.o(i.ForkRoad_L))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ForkRoad_L &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>ForkRoad_R</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, menu_core.o(i.ForkRoad_R))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ForkRoad_R &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>ForkRoad_Reset</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, menu_core.o(i.ForkRoad_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ForkRoad_Reset &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[e8]"></a>IMU_offset</STRONG> (Thumb, 288 bytes, Stack size 72 bytes, car_filtercalculate.o(i.IMU_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = IMU_offset &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_icm20602_get_data
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>InFork_Angle_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InFork_Angle_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_Angle_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>InFork_Angle_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InFork_Angle_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_Angle_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>InFork_Inductance_L_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InFork_Inductance_L_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_Inductance_L_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>InFork_Inductance_L_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InFork_Inductance_L_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_Inductance_L_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>InFork_Inductance_M_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InFork_Inductance_M_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_Inductance_M_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>InFork_Inductance_M_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InFork_Inductance_M_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_Inductance_M_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>InFork_Inductance_R_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InFork_Inductance_R_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_Inductance_R_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[53]"></a>InFork_Inductance_R_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InFork_Inductance_R_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_Inductance_R_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>InFork_TurnKd_Add</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.InFork_TurnKd_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_TurnKd_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>InFork_TurnKd_Sub</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.InFork_TurnKd_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_TurnKd_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>InFork_factor_Add</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.InFork_factor_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = InFork_factor_Add &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>InFork_factor_Sub</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.InFork_factor_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = InFork_factor_Sub &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>InFork_speed_Add</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, menu_core.o(i.InFork_speed_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_speed_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>InFork_speed_Sub</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, menu_core.o(i.InFork_speed_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_speed_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[56]"></a>InFork_time_Add</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, menu_core.o(i.InFork_time_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_time_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>InFork_time_Sub</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, menu_core.o(i.InFork_time_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InFork_time_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>InRound_Angle_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InRound_Angle_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InRound_Angle_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>InRound_Angle_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InRound_Angle_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InRound_Angle_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>InRound_Enable_Set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.InRound_Enable_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InRound_Enable_Set &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>InRound_Inductance_L_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InRound_Inductance_L_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InRound_Inductance_L_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>InRound_Inductance_L_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InRound_Inductance_L_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InRound_Inductance_L_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>InRound_Inductance_M_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InRound_Inductance_M_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InRound_Inductance_M_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>InRound_Inductance_M_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InRound_Inductance_M_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InRound_Inductance_M_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>InRound_Inductance_R_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InRound_Inductance_R_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InRound_Inductance_R_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>InRound_Inductance_R_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.InRound_Inductance_R_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = InRound_Inductance_R_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>InRound_factor_Add</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.InRound_factor_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = InRound_factor_Add &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>InRound_factor_Sub</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.InRound_factor_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = InRound_factor_Sub &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[ec]"></a>Information_show</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, menu_core.o(i.Information_show))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Information_show &rArr; MENU_DisplayStringTitle &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringTitle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_100ms
</UL>

<P><STRONG><a name="[3d]"></a>Is_abandon_Round</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.Is_abandon_Round))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Is_abandon_Round &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[ee]"></a>Key_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, key.o(i.Key_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Key_Init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f0]"></a>Key_Scan</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, key.o(i.Key_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Key_Scan &rArr; systick_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_task
</UL>

<P><STRONG><a name="[f2]"></a>Key_task</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, menu_core.o(i.Key_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Key_task &rArr; SelectFunc &rArr; Menu_Display &rArr; MENU_drawRectagnleFill &rArr; MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpFunc
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectFunc
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnFunc
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_100ms
</UL>

<P><STRONG><a name="[f6]"></a>LPF_1</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, car_filtercalculate.o(i.LPF_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LPF_1 &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;limit_filter
</UL>

<P><STRONG><a name="[c4]"></a>MENU_DisplayStringLine</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, menu_display.o(i.MENU_DisplayStringLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_showstr
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_show
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForkRoad_Reset
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubMenu_Display
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kp_Sub
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kp_Add
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_ki_Sub
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_ki_Add
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kd_Sub
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kd_Add
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getball_flag
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpFunc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kp_Sub
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kp_Add
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kd_Sub
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kd_Add
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OutMin_Sub
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OutMin_Add
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OutMax_Sub
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OutMax_Add
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAngle_Sub
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAngle_Add
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stand_Mode
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedPid_OutMin_Sub
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedPid_OutMin_Add
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedPid_OutMax_Sub
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedPid_OutMax_Add
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Reset
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_R
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_L
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mid_Angle_Sub
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mid_Angle_Add
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_abandon_Round
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_factor_Sub
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_factor_Add
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_R_Sub
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_R_Add
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_M_Sub
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_M_Add
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_L_Sub
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_L_Add
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Enable_Set
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Angle_Sub
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Angle_Add
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_time_Sub
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_time_Add
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_speed_Sub
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_speed_Add
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_factor_Sub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_factor_Add
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_TurnKd_Sub
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_TurnKd_Add
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_R_Sub
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_R_Add
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_M_Sub
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_M_Add
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_L_Sub
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_L_Add
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Angle_Sub
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Angle_Add
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForkRoad_R
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForkRoad_L
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForkRoad_Enable_Set
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Follow_Mode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fall_time_Sub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fall_time_Add
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownFunc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarSpeed_Sub
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarSpeed_Add
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kp_Sub
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kp_Add
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_ki_Sub
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_ki_Add
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kd_Sub
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kd_Add
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kp_Sub
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kp_Add
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_ki_Sub
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_ki_Add
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kd_Sub
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kd_Add
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeedPid_OutMin_Sub
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeedPid_OutMin_Add
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeedPid_OutMax_Sub
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeedPid_OutMax_Add
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnglePid_OutMin_Sub
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnglePid_OutMin_Add
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnglePid_OutMax_Sub
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnglePid_OutMax_Add
</UL>

<P><STRONG><a name="[ed]"></a>MENU_DisplayStringTitle</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, menu_display.o(i.MENU_DisplayStringTitle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MENU_DisplayStringTitle &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_showstr
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_show
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>

<P><STRONG><a name="[f8]"></a>MENU_HLine</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, menu_display.o(i.MENU_HLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MENU_HLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_drwaPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_drawRectagnleFill
</UL>

<P><STRONG><a name="[fa]"></a>MENU_RLine</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, menu_display.o(i.MENU_RLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_drwaPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_drawRectagnleFill
</UL>

<P><STRONG><a name="[da]"></a>MENU_drawRectagnleFill</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, menu_display.o(i.MENU_drawRectagnleFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MENU_drawRectagnleFill &rArr; MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_RLine
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_HLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpFunc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownFunc
</UL>

<P><STRONG><a name="[f9]"></a>MENU_drwaPoint</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, menu_display.o(i.MENU_drwaPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_drawpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_RLine
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_HLine
</UL>

<P><STRONG><a name="[fc]"></a>MENU_setScreenColor</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, menu_display.o(i.MENU_setScreenColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MENU_setScreenColor &rArr; ips200_clear &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_Enable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_Disable
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>

<P><STRONG><a name="[5d]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[fe]"></a>Menu_Display</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, menu_core.o(i.Menu_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Menu_Display &rArr; MENU_drawRectagnleFill &rArr; MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubMenu_Display
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_setScreenColor
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_drawRectagnleFill
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringTitle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectFunc
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnFunc
</UL>

<P><STRONG><a name="[ff]"></a>Menu_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, menu_core.o(i.Menu_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Menu_Init &rArr; Menu_Display &rArr; MENU_drawRectagnleFill &rArr; MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_setScreenColor
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_drawRectagnleFill
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>Mid_Angle_Add</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.Mid_Angle_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Mid_Angle_Add &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>Mid_Angle_Sub</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.Mid_Angle_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Mid_Angle_Sub &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[152]"></a>NVIC_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hal_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_interrupt_init
</UL>

<P><STRONG><a name="[1]"></a>Nop_Func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, menu_core.o(i.Nop_Func))
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[100]"></a>PID_FuzzyPD</STRONG> (Thumb, 288 bytes, Stack size 48 bytes, bd_fuzzy.o(i.PID_FuzzyPD))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PID_FuzzyPD &rArr; Fuzzy_Kp &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_DMF
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuzzy_Kp
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuzzy_Kd
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
</UL>

<P><STRONG><a name="[62]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[103]"></a>Q_IMUupdata</STRONG> (Thumb, 2262 bytes, Stack size 152 bytes, car_filtercalculate.o(i.Q_IMUupdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Q_IMUupdata &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_sqrt
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;limit_filter
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_2ms
</UL>

<P><STRONG><a name="[138]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_AHB3PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsmc_init
</UL>

<P><STRONG><a name="[f5]"></a>ReturnFunc</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, menu_core.o(i.ReturnFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ReturnFunc &rArr; Menu_Display &rArr; MENU_drawRectagnleFill &rArr; MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_task
</UL>

<P><STRONG><a name="[37]"></a>Round_L</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, menu_core.o(i.Round_L))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Round_L &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>Round_R</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, menu_core.o(i.Round_R))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Round_R &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>Round_Reset</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, menu_core.o(i.Round_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Round_Reset &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[60]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[f4]"></a>SelectFunc</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, menu_core.o(i.SelectFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SelectFunc &rArr; Menu_Display &rArr; MENU_drawRectagnleFill &rArr; MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_task
</UL>

<P><STRONG><a name="[10c]"></a>Set_PWM</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, car_control.o(i.Set_PWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Set_PWM &rArr; pwm_duty_updata &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_duty_updata
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;limit_ab
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_100ms
</UL>

<P><STRONG><a name="[27]"></a>SpeedPid_OutMax_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.SpeedPid_OutMax_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SpeedPid_OutMax_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>SpeedPid_OutMax_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.SpeedPid_OutMax_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SpeedPid_OutMax_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>SpeedPid_OutMin_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.SpeedPid_OutMin_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SpeedPid_OutMin_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>SpeedPid_OutMin_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.SpeedPid_OutMin_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SpeedPid_OutMin_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[10e]"></a>Speed_Control</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, car_control.o(i.Speed_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Speed_Control &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;limit_ab
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_100ms
</UL>

<P><STRONG><a name="[10f]"></a>Stand_Control</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, car_control.o(i.Stand_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Stand_Control &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;limit_ab
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
</UL>

<P><STRONG><a name="[9]"></a>Stand_Mode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, menu_core.o(i.Stand_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Stand_Mode &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>StartAngle_Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.StartAngle_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = StartAngle_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>StartAngle_Sub</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, menu_core.o(i.StartAngle_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = StartAngle_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[ce]"></a>SubMenu_Display</STRONG> (Thumb, 2328 bytes, Stack size 16 bytes, menu_core.o(i.SubMenu_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SubMenu_Display &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Data_Read
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Display
</UL>

<P><STRONG><a name="[a3]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, system_mm32f327x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.TIM1_UP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = TIM1_UP_IRQHandler &rArr; task_2ms &rArr; Q_IMUupdata &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_2ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>TIM2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, isr.o(i.TIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>TIM3_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>TIM4_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>TIM5_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.TIM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM5_IRQHandler &rArr; task_5ms &rArr; Set_PWM &rArr; pwm_duty_updata &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>TIM6_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.TIM6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TIM6_IRQHandler &rArr; task_10ms &rArr; PID_FuzzyPD &rArr; Fuzzy_Kp &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>TIM7_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TIM7_IRQHandler &rArr; task_100ms &rArr; Key_task &rArr; SelectFunc &rArr; Menu_Display &rArr; MENU_drawRectagnleFill &rArr; MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_100ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM8_UP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>Transmit_buff</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, menu_core.o(i.Transmit_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Transmit_buff &rArr; seekfree_wireless_send_buff &rArr; uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_send_buff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>Turn_OutMax_Add</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.Turn_OutMax_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Turn_OutMax_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>Turn_OutMax_Sub</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.Turn_OutMax_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Turn_OutMax_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>Turn_OutMin_Add</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.Turn_OutMin_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Turn_OutMin_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>Turn_OutMin_Sub</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.Turn_OutMin_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Turn_OutMin_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>Turn_kd_Add</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, menu_core.o(i.Turn_kd_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Turn_kd_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>Turn_kd_Sub</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, menu_core.o(i.Turn_kd_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Turn_kd_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>Turn_kp_Add</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, menu_core.o(i.Turn_kp_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Turn_kp_Add &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>Turn_kp_Sub</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, menu_core.o(i.Turn_kp_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Turn_kp_Sub &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[85]"></a>UART1_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, isr.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>UART2_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, isr.o(i.UART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>UART3_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, isr.o(i.UART3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>UART4_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, isr.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>UART5_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, isr.o(i.UART5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>UART6_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, isr.o(i.UART6_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>UART7_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, isr.o(i.UART7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>UART8_IRQHandler</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, isr.o(i.UART8_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART8_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_uart_callback
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_cof_uart_interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[119]"></a>UART_Bluetooth_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, hc_08.o(i.UART_Bluetooth_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UART_Bluetooth_Init &rArr; uart_init &rArr; uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f3]"></a>UpFunc</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, menu_core.o(i.UpFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UpFunc &rArr; MENU_drawRectagnleFill &rArr; MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_drawRectagnleFill
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_task
</UL>

<P><STRONG><a name="[5f]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[11c]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[16f]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[c3]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_show
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForkRoad_Reset
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubMenu_Display
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kp_Sub
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kp_Add
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_ki_Sub
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_ki_Add
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kd_Sub
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speed_kd_Add
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getball_flag
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kp_Sub
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kp_Add
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kd_Sub
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_kd_Add
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OutMin_Sub
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OutMin_Add
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OutMax_Sub
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OutMax_Add
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAngle_Sub
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartAngle_Add
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stand_Mode
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedPid_OutMin_Sub
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedPid_OutMin_Add
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedPid_OutMax_Sub
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedPid_OutMax_Add
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_Reset
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_R
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Round_L
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mid_Angle_Sub
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mid_Angle_Add
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_abandon_Round
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_factor_Sub
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_factor_Add
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_R_Sub
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_R_Add
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_M_Sub
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_M_Add
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_L_Sub
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Inductance_L_Add
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Enable_Set
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Angle_Sub
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InRound_Angle_Add
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_time_Sub
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_time_Add
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_speed_Sub
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_speed_Add
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_factor_Sub
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_factor_Add
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_TurnKd_Sub
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_TurnKd_Add
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_R_Sub
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_R_Add
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_M_Sub
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_M_Add
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_L_Sub
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Inductance_L_Add
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Angle_Sub
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InFork_Angle_Add
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForkRoad_R
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForkRoad_L
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForkRoad_Enable_Set
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Follow_Mode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fall_time_Sub
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fall_time_Add
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarSpeed_Sub
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarSpeed_Add
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kp_Sub
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kp_Add
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_ki_Sub
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_ki_Add
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kd_Sub
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_kd_Add
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kp_Sub
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kp_Add
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_ki_Sub
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_ki_Add
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kd_Sub
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_kd_Add
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeedPid_OutMin_Sub
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeedPid_OutMin_Add
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeedPid_OutMax_Sub
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeedPid_OutMax_Add
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnglePid_OutMin_Sub
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnglePid_OutMin_Add
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnglePid_OutMax_Sub
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnglePid_OutMax_Add
</UL>

<P><STRONG><a name="[170]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[171]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[12e]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[11e]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[11f]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[121]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[122]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[123]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[172]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[173]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[174]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[12d]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[12c]"></a>adc_convert</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, zf_adc.o(i.adc_convert))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_mean_filter
</UL>

<P><STRONG><a name="[129]"></a>adc_init</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, zf_adc.o(i.adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = adc_init &rArr; adc_pin_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12b]"></a>adc_mean_filter</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, zf_adc.o(i.adc_mean_filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adc_mean_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
</UL>

<P><STRONG><a name="[149]"></a>afio_init</STRONG> (Thumb, 218 bytes, Stack size 20 bytes, zf_gpio.o(i.afio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_pin_init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_pin_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_pin_init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_pin_init
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[106]"></a>asin</STRONG> (Thumb, 572 bytes, Stack size 56 bytes, asin.o(i.asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = asin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
</UL>

<P><STRONG><a name="[130]"></a>atan</STRONG> (Thumb, 474 bytes, Stack size 40 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[107]"></a>atan2</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
</UL>

<P><STRONG><a name="[131]"></a>board_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, board.o(i.board_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = board_init &rArr; uart_init &rArr; uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>flash_check</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, zf_flash.o(i.flash_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = flash_check
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_program
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Data_Write
</UL>

<P><STRONG><a name="[d0]"></a>flash_erase_page</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, zf_flash.o(i.flash_erase_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = flash_erase_page &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_program
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Data_Write
</UL>

<P><STRONG><a name="[d1]"></a>flash_page_program</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, zf_flash.o(i.flash_page_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = flash_page_program &rArr; FLASH_ProgramWord &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Data_Write
</UL>

<P><STRONG><a name="[cd]"></a>flash_page_read</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, zf_flash.o(i.flash_page_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_page_read
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Data_Read
</UL>

<P><STRONG><a name="[135]"></a>fsmc_init</STRONG> (Thumb, 88 bytes, Stack size 56 bytes, zf_fsmc.o(i.fsmc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fsmc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_Bank_Init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMStructInit
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMB_BankStructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[13b]"></a>fuzzy_init</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, bd_fuzzy.o(i.fuzzy_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fuzzy_init &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13c]"></a>get_icm20602_accdata_spi</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, seekfree_icm20602.o(i.get_icm20602_accdata_spi))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = get_icm20602_accdata_spi &rArr; icm_spi_r_reg_bytes &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_icm20602_get_data
</UL>

<P><STRONG><a name="[13e]"></a>get_icm20602_gyro_spi</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, seekfree_icm20602.o(i.get_icm20602_gyro_spi))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = get_icm20602_gyro_spi &rArr; icm_spi_r_reg_bytes &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_icm20602_get_data
</UL>

<P><STRONG><a name="[7]"></a>getball_flag</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, menu_core.o(i.getball_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = getball_flag &rArr; MENU_DisplayStringLine &rArr; ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[f1]"></a>gpio_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zf_gpio.o(i.gpio_get))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_get_count
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_send_buff
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>

<P><STRONG><a name="[ef]"></a>gpio_init</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, zf_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_pin_init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_init
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_init
</UL>

<P><STRONG><a name="[cb]"></a>gpio_set</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, zf_gpio.o(i.gpio_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Stop
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Start
</UL>

<P><STRONG><a name="[157]"></a>gpio_toggle</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, zf_gpio.o(i.gpio_toggle))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_100ms
</UL>

<P><STRONG><a name="[13f]"></a>icm20602_init_spi</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, seekfree_icm20602.o(i.icm20602_init_spi))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = icm20602_init_spi &rArr; spi_init &rArr; spi_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_w_reg_byte
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_byte
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_self3_check
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[145]"></a>ips200_address_set</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, seekfree_ips200_parallel8.o(i.ips200_address_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_wr_reg
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_wr_data16
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_showchar
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_drawpoint
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_clear
</UL>

<P><STRONG><a name="[fd]"></a>ips200_clear</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, seekfree_ips200_parallel8.o(i.ips200_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ips200_clear &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_wr_data16
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_address_set
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_setScreenColor
</UL>

<P><STRONG><a name="[fb]"></a>ips200_drawpoint</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, seekfree_ips200_parallel8.o(i.ips200_drawpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_wr_data16
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_address_set
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_drwaPoint
</UL>

<P><STRONG><a name="[148]"></a>ips200_init</STRONG> (Thumb, 608 bytes, Stack size 8 bytes, seekfree_ips200_parallel8.o(i.ips200_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ips200_init &rArr; fsmc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsmc_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_wr_reg
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_wr_data
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14b]"></a>ips200_showchar</STRONG> (Thumb, 104 bytes, Stack size 28 bytes, seekfree_ips200_parallel8.o(i.ips200_showchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_wr_data16
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_address_set
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_showstr
</UL>

<P><STRONG><a name="[f7]"></a>ips200_showstr</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, seekfree_ips200_parallel8.o(i.ips200_showstr))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ips200_showstr &rArr; ips200_showchar &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_showchar
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringTitle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
</UL>

<P><STRONG><a name="[14c]"></a>ips200_w_data</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, seekfree_ips200_parallel8.o(i.ips200_w_data))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_wr_data16
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_wr_data
</UL>

<P><STRONG><a name="[14a]"></a>ips200_wr_data</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, seekfree_ips200_parallel8.o(i.ips200_wr_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ips200_wr_data
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_w_data
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
</UL>

<P><STRONG><a name="[147]"></a>ips200_wr_data16</STRONG> (Thumb, 98 bytes, Stack size 4 bytes, seekfree_ips200_parallel8.o(i.ips200_wr_data16))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_w_data
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_showchar
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_drawpoint
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_clear
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_address_set
</UL>

<P><STRONG><a name="[146]"></a>ips200_wr_reg</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, seekfree_ips200_parallel8.o(i.ips200_wr_reg))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_address_set
</UL>

<P><STRONG><a name="[c6]"></a>limit_ab</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, seekfree_fun.o(i.limit_ab))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stand_Control
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Control
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_Control
</UL>

<P><STRONG><a name="[105]"></a>limit_filter</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, car_filtercalculate.o(i.limit_filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = limit_filter &rArr; LPF_1 &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPF_1
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
</UL>

<P><STRONG><a name="[a2]"></a>main</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main &rArr; Menu_Init &rArr; Menu_Display &rArr; MENU_drawRectagnleFill &rArr; MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_interrupt_init
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fuzzy_init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Bluetooth_Init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_offset
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Data_Read
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[d6]"></a>mt9v03x_dma</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_dma))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[118]"></a>mt9v03x_uart_callback</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_uart_callback))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
</UL>

<P><STRONG><a name="[df]"></a>mt9v03x_vsync</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[104]"></a>my_sqrt</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, car_filtercalculate.o(i.my_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = my_sqrt &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
</UL>

<P><STRONG><a name="[151]"></a>nvic_init</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, common.o(i.nvic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nvic_init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_irq
</UL>

<P><STRONG><a name="[117]"></a>ov7725_cof_uart_interrupt</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_cof_uart_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
</UL>

<P><STRONG><a name="[d4]"></a>ov7725_dma</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_7725.o(i.ov7725_dma))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[d5]"></a>ov7725_uart_dma</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_uart_dma))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[de]"></a>ov7725_uart_vsync</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_uart_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[dd]"></a>ov7725_vsync</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_7725.o(i.ov7725_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[10d]"></a>pwm_duty_updata</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, zf_pwm.o(i.pwm_duty_updata))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pwm_duty_updata &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM
</UL>

<P><STRONG><a name="[150]"></a>pwm_init</STRONG> (Thumb, 632 bytes, Stack size 48 bytes, zf_pwm.o(i.pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = pwm_init &rArr; pwm_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14d]"></a>seekfree_wireless_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, seekfree_wireless.o(i.seekfree_wireless_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = seekfree_wireless_init &rArr; uart_init &rArr; uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[114]"></a>seekfree_wireless_send_buff</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, seekfree_wireless.o(i.seekfree_wireless_send_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = seekfree_wireless_send_buff &rArr; uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit_buff
</UL>

<P><STRONG><a name="[59]"></a>show_Disable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, menu_core.o(i.show_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = show_Disable &rArr; MENU_setScreenColor &rArr; ips200_clear &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_setScreenColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>show_Enable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, menu_core.o(i.show_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = show_Enable &rArr; MENU_setScreenColor &rArr; ips200_clear &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_setScreenColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>speed_kd_Add</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.speed_kd_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = speed_kd_Add &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>speed_kd_Sub</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.speed_kd_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = speed_kd_Sub &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>speed_ki_Add</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.speed_ki_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = speed_ki_Add &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>speed_ki_Sub</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.speed_ki_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = speed_ki_Sub &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>speed_kp_Add</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.speed_kp_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = speed_kp_Add &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>speed_kp_Sub</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, menu_core.o(i.speed_kp_Sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = speed_kp_Sub &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_DisplayStringLine
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu_core.o(.data)
</UL>
<P><STRONG><a name="[ea]"></a>spi_icm20602_get_data</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, car_imu.o(i.spi_icm20602_get_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = spi_icm20602_get_data &rArr; get_icm20602_gyro_spi &rArr; icm_spi_r_reg_bytes &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_icm20602_gyro_spi
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_icm20602_accdata_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_offset
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_2ms
</UL>

<P><STRONG><a name="[140]"></a>spi_init</STRONG> (Thumb, 434 bytes, Stack size 32 bytes, zf_spi.o(i.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = spi_init &rArr; spi_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
</UL>

<P><STRONG><a name="[144]"></a>spi_mosi</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, zf_spi.o(i.spi_mosi))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_w_reg_byte
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_bytes
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_byte
</UL>

<P><STRONG><a name="[12f]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[d8]"></a>steepest_descend</STRONG> (Thumb, 400 bytes, Stack size 72 bytes, car_filtercalculate.o(i.steepest_descend))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = steepest_descend &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_steepest
</UL>

<P><STRONG><a name="[156]"></a>systick_delay</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, zf_systick.o(i.systick_delay))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
</UL>

<P><STRONG><a name="[eb]"></a>systick_delay_ms</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, zf_systick.o(i.systick_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = systick_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips200_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_self3_check
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_offset
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>

<P><STRONG><a name="[113]"></a>task_100ms</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, car_task.o(i.task_100ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = task_100ms &rArr; Key_task &rArr; SelectFunc &rArr; Menu_Display &rArr; MENU_drawRectagnleFill &rArr; MENU_RLine &rArr; MENU_drwaPoint &rArr; ips200_drawpoint &rArr; ips200_address_set &rArr; ips200_wr_data16
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_toggle
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_task
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Information_show
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Control
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Stop
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[112]"></a>task_10ms</STRONG> (Thumb, 1652 bytes, Stack size 24 bytes, car_task.o(i.task_10ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = task_10ms &rArr; PID_FuzzyPD &rArr; Fuzzy_Kp &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_send_buff
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForkRoad_Reset
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stand_Control
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Start
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FuzzyPD
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[110]"></a>task_2ms</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, car_task.o(i.task_2ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = task_2ms &rArr; Q_IMUupdata &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_icm20602_get_data
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q_IMUupdata
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_steepest
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_IRQHandler
</UL>

<P><STRONG><a name="[111]"></a>task_5ms</STRONG> (Thumb, 466 bytes, Stack size 24 bytes, car_task.o(i.task_5ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = task_5ms &rArr; Set_PWM &rArr; pwm_duty_updata &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_mean_filter
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_rst
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_get_count
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_send_buff
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AngleSpeed_Control
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[158]"></a>tim_counter_get_count</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, zf_tim.o(i.tim_counter_get_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tim_counter_get_count
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
</UL>

<P><STRONG><a name="[14f]"></a>tim_counter_init</STRONG> (Thumb, 346 bytes, Stack size 16 bytes, zf_tim.o(i.tim_counter_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = tim_counter_init &rArr; tim_counter_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[159]"></a>tim_counter_rst</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, zf_tim.o(i.tim_counter_rst))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
</UL>

<P><STRONG><a name="[14e]"></a>tim_interrupt_init</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, zf_pit.o(i.tim_interrupt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tim_interrupt_init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11a]"></a>uart_init</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, zf_uart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = uart_init &rArr; uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Bluetooth_Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_init
</UL>

<P><STRONG><a name="[115]"></a>uart_putbuff</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, zf_uart.o(i.uart_putbuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_putbuff
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_5ms
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_10ms
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_send_buff
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transmit_buff
</UL>

<P><STRONG><a name="[11b]"></a>uart_rx_irq</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, zf_uart.o(i.uart_rx_irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uart_rx_irq &rArr; nvic_init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Bluetooth_Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seekfree_wireless_init
</UL>

<P><STRONG><a name="[116]"></a>wireless_uart_callback</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, seekfree_wireless.o(i.wireless_uart_callback))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[10a]"></a>DELAY_xUs</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, system_mm32f327x.o(i.DELAY_xUs))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>

<P><STRONG><a name="[108]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_mm32f327x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[109]"></a>SetSysClockToXX</STRONG> (Thumb, 396 bytes, Stack size 32 bytes, system_mm32f327x.o(i.SetSysClockToXX))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_xUs
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[12a]"></a>adc_pin_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, zf_adc.o(i.adc_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = adc_pin_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[154]"></a>pwm_pin_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, zf_pwm.o(i.pwm_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = pwm_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[155]"></a>spi_pin_init</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, zf_spi.o(i.spi_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = spi_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[15a]"></a>tim_counter_pin_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, zf_tim.o(i.tim_counter_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = tim_counter_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_counter_init
</UL>

<P><STRONG><a name="[15b]"></a>uart_pin_init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, zf_uart.o(i.uart_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[141]"></a>icm20602_self3_check</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, seekfree_icm20602.o(i.icm20602_self3_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = icm20602_self3_check &rArr; icm_spi_r_reg_byte &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm_spi_r_reg_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
</UL>

<P><STRONG><a name="[143]"></a>icm_spi_r_reg_byte</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, seekfree_icm20602.o(i.icm_spi_r_reg_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = icm_spi_r_reg_byte &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_self3_check
</UL>

<P><STRONG><a name="[13d]"></a>icm_spi_r_reg_bytes</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, seekfree_icm20602.o(i.icm_spi_r_reg_bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = icm_spi_r_reg_bytes &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_icm20602_gyro_spi
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_icm20602_accdata_spi
</UL>

<P><STRONG><a name="[142]"></a>icm_spi_w_reg_byte</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, seekfree_icm20602.o(i.icm_spi_w_reg_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = icm_spi_w_reg_byte &rArr; spi_mosi
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_mosi
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icm20602_init_spi
</UL>

<P><STRONG><a name="[e5]"></a>Fuzzy_Kd</STRONG> (Thumb, 626 bytes, Stack size 96 bytes, bd_fuzzy.o(i.Fuzzy_Kd))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Fuzzy_Kd &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FuzzyPD
</UL>

<P><STRONG><a name="[e7]"></a>Fuzzy_Kp</STRONG> (Thumb, 624 bytes, Stack size 96 bytes, bd_fuzzy.o(i.Fuzzy_Kp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Fuzzy_Kp &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FuzzyPD
</UL>

<P><STRONG><a name="[101]"></a>count_DMF</STRONG> (Thumb, 1310 bytes, Stack size 72 bytes, bd_fuzzy.o(i.count_DMF))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = count_DMF &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FuzzyPD
</UL>

<P><STRONG><a name="[124]"></a>_fp_digits</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[11d]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[127]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[126]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a5]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
